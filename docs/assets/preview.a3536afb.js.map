{"version":3,"file":"preview.a3536afb.js","sources":["../../node_modules/storybook-addon-pseudo-states/dist/esm/constants.js","../../node_modules/storybook-addon-pseudo-states/dist/esm/splitSelectors.js","../../node_modules/storybook-addon-pseudo-states/dist/esm/rewriteStyleSheet.js","../../node_modules/storybook-addon-pseudo-states/dist/esm/withPseudoState.js","../../node_modules/storybook-addon-pseudo-states/dist/esm/preset/preview.js"],"sourcesContent":["export const ADDON_ID = \"storybook/pseudo-states\";\nexport const TOOL_ID = \"\".concat(ADDON_ID, \"/tool\"); // Dynamic pseudo-classes\n// @see https://www.w3.org/TR/2018/REC-selectors-3-20181106/#dynamic-pseudos\n\nexport const PSEUDO_STATES = {\n  hover: \"hover\",\n  active: \"active\",\n  focusVisible: \"focus-visible\",\n  focusWithin: \"focus-within\",\n  focus: \"focus\",\n  // must come after its alternatives\n  visited: \"visited\",\n  link: \"link\",\n  target: \"target\"\n};","const isAtRule = selector => selector.indexOf(\"@\") === 0;\n\nexport const splitSelectors = selectors => {\n  if (isAtRule(selectors)) return [selectors];\n  let result = [];\n  let parentheses = 0;\n  let brackets = 0;\n  let selector = \"\";\n\n  for (let i = 0, len = selectors.length; i < len; i++) {\n    const char = selectors[i];\n\n    if (char === \"(\") {\n      parentheses += 1;\n    } else if (char === \")\") {\n      parentheses -= 1;\n    } else if (char === \"[\") {\n      brackets += 1;\n    } else if (char === \"]\") {\n      brackets -= 1;\n    } else if (char === \",\") {\n      if (!parentheses && !brackets) {\n        result.push(selector.trim());\n        selector = \"\";\n        continue;\n      }\n    }\n\n    selector += char;\n  }\n\n  result.push(selector.trim());\n  return result;\n};","import { PSEUDO_STATES } from \"./constants\";\nimport { splitSelectors } from \"./splitSelectors\";\nconst pseudoStates = Object.values(PSEUDO_STATES);\nconst matchOne = new RegExp(\":(\".concat(pseudoStates.join(\"|\"), \")\"));\nconst matchAll = new RegExp(\":(\".concat(pseudoStates.join(\"|\"), \")\"), \"g\");\nconst warnings = new Set();\n\nconst warnOnce = message => {\n  if (warnings.has(message)) return; // eslint-disable-next-line no-console\n\n  console.warn(message);\n  warnings.add(message);\n};\n\nconst rewriteRule = (cssText, selectorText, shadowRoot) => {\n  return cssText.replace(selectorText, splitSelectors(selectorText).flatMap(selector => {\n    if (selector.includes(\".pseudo-\")) {\n      return [];\n    }\n\n    if (!matchOne.test(selector)) {\n      return [selector];\n    }\n\n    const states = [];\n    const plainSelector = selector.replace(matchAll, (_, state) => {\n      states.push(state);\n      return \"\";\n    });\n    const classSelector = states.reduce((acc, state) => acc.replace(new RegExp(\":\".concat(state), \"g\"), \".pseudo-\".concat(state)), selector);\n\n    if (selector.startsWith(\":host(\") || selector.startsWith(\"::slotted(\")) {\n      return [selector, classSelector];\n    }\n\n    const ancestorSelector = shadowRoot ? \":host(\".concat(states.map(s => \".pseudo-\".concat(s)).join(\"\"), \") \").concat(plainSelector) : \"\".concat(states.map(s => \".pseudo-\".concat(s)).join(\"\"), \" \").concat(plainSelector);\n    return [selector, classSelector, ancestorSelector].filter(selector => !selector.includes(\":not()\"));\n  }).join(\", \"));\n}; // Rewrites the style sheet to add alternative selectors for any rule that targets a pseudo state.\n// A sheet can only be rewritten once, and may carry over between stories.\n\n\nexport const rewriteStyleSheet = (sheet, shadowRoot, shadowHosts) => {\n  if (sheet.__pseudoStatesRewritten) return;\n  sheet.__pseudoStatesRewritten = true;\n\n  try {\n    let index = 0;\n\n    for (const {\n      cssText,\n      selectorText\n    } of sheet.cssRules) {\n      if (matchOne.test(selectorText)) {\n        const newRule = rewriteRule(cssText, selectorText, shadowRoot);\n        sheet.deleteRule(index);\n        sheet.insertRule(newRule, index);\n        if (shadowRoot) shadowHosts.add(shadowRoot.host);\n      }\n\n      index++;\n\n      if (index > 1000) {\n        warnOnce(\"Reached maximum of 1000 pseudo selectors per sheet, skipping the rest.\");\n        break;\n      }\n    }\n  } catch (e) {\n    if (e.toString().includes(\"cssRules\")) {\n      warnOnce(\"Can't access cssRules, likely due to CORS restrictions: \".concat(sheet.href));\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(e, sheet.href);\n    }\n  }\n};","/* eslint-env browser */\nimport { addons, useEffect } from \"@storybook/addons\";\nimport { DOCS_RENDERED, STORY_CHANGED, STORY_RENDERED, UPDATE_GLOBALS } from \"@storybook/core-events\";\nimport { PSEUDO_STATES } from \"./constants\";\nimport { rewriteStyleSheet } from \"./rewriteStyleSheet\";\nconst channel = addons.getChannel();\nconst shadowHosts = new Set(); // Drops any existing pseudo state classnames that carried over from a previously viewed story\n// before adding the new classnames. We do this the old-fashioned way, for IE compatibility.\n\nconst applyClasses = (element, classnames) => {\n  element.className = element.className.split(\" \").filter(classname => classname && classname.indexOf(\"pseudo-\") !== 0).concat(...classnames).join(\" \");\n};\n\nconst applyParameter = (rootElement, parameter) => {\n  const map = new Map([[rootElement, new Set()]]);\n\n  const add = (target, state) => map.set(target, new Set([...(map.get(target) || []), state]));\n\n  Object.entries(parameter || {}).forEach(_ref => {\n    let [state, value] = _ref;\n\n    if (typeof value === \"boolean\") {\n      // default API - applying pseudo class to root element.\n      add(rootElement, value && state);\n    } else if (typeof value === \"string\") {\n      // explicit selectors API - applying pseudo class to a specific element\n      rootElement.querySelectorAll(value).forEach(el => add(el, state));\n    } else if (Array.isArray(value)) {\n      // explicit selectors API - we have an array (of strings) recursively handle each one\n      value.forEach(sel => rootElement.querySelectorAll(sel).forEach(el => add(el, state)));\n    }\n  });\n  map.forEach((states, target) => {\n    const classnames = [];\n    states.forEach(key => PSEUDO_STATES[key] && classnames.push(\"pseudo-\".concat(PSEUDO_STATES[key])));\n    applyClasses(target, classnames);\n  });\n}; // Traverses ancestry to collect relevant pseudo classnames, and applies them to the shadow host.\n// Shadow DOM can only access classes on its host. Traversing is needed to mimic the CSS cascade.\n\n\nconst updateShadowHost = shadowHost => {\n  const classnames = new Set();\n\n  for (let element = shadowHost.parentElement; element; element = element.parentElement) {\n    if (!element.className) continue;\n    element.className.split(\" \").filter(classname => classname.indexOf(\"pseudo-\") === 0).forEach(classname => classnames.add(classname));\n  }\n\n  applyClasses(shadowHost, classnames);\n}; // Global decorator that rewrites stylesheets and applies classnames to render pseudo styles\n\n\nexport const withPseudoState = (StoryFn, _ref2) => {\n  let {\n    viewMode,\n    parameters,\n    id,\n    globals: globalsArgs\n  } = _ref2;\n  const {\n    pseudo: parameter\n  } = parameters;\n  const {\n    pseudo: globals\n  } = globalsArgs; // Sync parameter to globals, used by the toolbar (only in canvas as this\n  // doesn't make sense for docs because many stories are displayed at once)\n\n  useEffect(() => {\n    if (parameter !== globals && viewMode === \"story\") {\n      channel.emit(UPDATE_GLOBALS, {\n        globals: {\n          pseudo: parameter\n        }\n      });\n    }\n  }, [parameter, viewMode]); // Convert selected states to classnames and apply them to the story root element.\n  // Then update each shadow host to redetermine its own pseudo classnames.\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      const element = document.getElementById(viewMode === \"docs\" ? \"story--\".concat(id) : \"root\");\n      applyParameter(element, globals || parameter);\n      shadowHosts.forEach(updateShadowHost);\n    }, 0);\n    return () => clearTimeout(timeout);\n  }, [globals, parameter, viewMode]);\n  return StoryFn();\n}; // Rewrite CSS rules for pseudo-states on all stylesheets to add an alternative selector\n\nconst rewriteStyleSheets = shadowRoot => {\n  var _shadowRoot$adoptedSt;\n\n  let styleSheets = shadowRoot ? shadowRoot.styleSheets : document.styleSheets;\n  if (shadowRoot !== null && shadowRoot !== void 0 && (_shadowRoot$adoptedSt = shadowRoot.adoptedStyleSheets) !== null && _shadowRoot$adoptedSt !== void 0 && _shadowRoot$adoptedSt.length) styleSheets = shadowRoot.adoptedStyleSheets;\n  Array.from(styleSheets).forEach(sheet => rewriteStyleSheet(sheet, shadowRoot, shadowHosts));\n}; // Only track shadow hosts for the current story\n\n\nchannel.on(STORY_CHANGED, () => shadowHosts.clear()); // Reinitialize CSS enhancements every time the story changes\n\nchannel.on(STORY_RENDERED, () => rewriteStyleSheets()); // Reinitialize CSS enhancements every time a docs page is rendered\n\nchannel.on(DOCS_RENDERED, () => rewriteStyleSheets()); // IE doesn't support shadow DOM\n\nif (Element.prototype.attachShadow) {\n  // Monkeypatch the attachShadow method so we can handle pseudo styles inside shadow DOM\n  Element.prototype._attachShadow = Element.prototype.attachShadow;\n\n  Element.prototype.attachShadow = function attachShadow(init) {\n    // Force \"open\" mode, so we can access the shadowRoot\n    const shadowRoot = this._attachShadow({ ...init,\n      mode: \"open\"\n    }); // Wait for it to render and apply its styles before rewriting them\n\n\n    requestAnimationFrame(() => {\n      rewriteStyleSheets(shadowRoot);\n      updateShadowHost(shadowRoot.host);\n    });\n    return shadowRoot;\n  };\n}","import { withPseudoState } from \"../withPseudoState\";\nexport const decorators = [withPseudoState];"],"names":[],"mappings":"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"}